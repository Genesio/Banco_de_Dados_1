--Favor Seguir !!!
--**** OBSERVAÇÕES:  
--	Em todos os scripts deve constar, antes do comando, 
--	 um comentário dizendo o que está sendo feito e qual tabela está sendo
--	 manipulada, além do número da questão equivalente. Exemplos:
	 -- Inserção de dados na tabela Empregado – Questão 3.a 
	 -- Seleção de todos os dependentes dos empregados que pertencem ao departamento de ‘Vendas’ 
	 
--->>> INICIO

--2º Questão)

	/* Modificar as tabelas acrescentando as regras referentes  às  chaves externas. */

ALTER TABLE curso 
	ADD CONSTRAINT FKCurso FOREIGN KEY(idInstituicao) REFERENCES instituicao(idInstituicao)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE turma
	ADD CONSTRAINT FKTurma FOREIGN KEY(idCurso) REFERENCES curso(idCurso)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE aluno
	ADD CONSTRAINT FKAluno FOREIGN KEY(idTurma) REFERENCES turma(idTurma)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE criterio
	ADD CONSTRAINT FKCriterio FOREIGN KEY(idDisciplina) REFERENCES disciplina(idDisciplina)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE avalia
	ADD CONSTRAINT FKAvalia FOREIGN KEY(idcriterio) REFERENCES criterio(idCriterio)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE disciplinacontem
	ADD CONSTRAINT FKDisciplinaContem FOREIGN KEY(idDisciplina) REFERENCES disciplina(idDisciplina)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE ensina
	ADD CONSTRAINT FKEnsinaCurso FOREIGN KEY(idCurso) REFERENCES curso(idCurso)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE ensina
	ADD CONSTRAINT FKEnsinaProf FOREIGN KEY(matricula) REFERENCES professor(matricula)	
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE sessao
	ADD CONSTRAINT FKSessao FOREIGN KEY(idTurma) REFERENCES turma(idTurma)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE participa_obtido
	ADD CONSTRAINT FKParticipaAluno FOREIGN KEY(matriculaAluno) REFERENCES aluno(matriculaAluno)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

ALTER TABLE participa_obtido
	ADD CONSTRAINT FKParticipaSessao FOREIGN KEY(idSessao) REFERENCES sessao(idSessao)
	ON DELETE SET NULL
	ON UPDATE CASCADE;

/* FIM DA 2º  QUESTÃO */


-- 3º Questão:

	 /* Alteração da tabela sessao inclusão do atributo data, tipo date - Questão 3.a*/
	 	ALTER TABLE sessao ADD COLUMN data date;
	 
	 /* Criação de um domínio usando o CHECK - Questão 3.b*/
		CREATE DOMAIN "domsexo" AS character(1)
		CONSTRAINT "domsexo_check" CHECK ((VALUE = ANY (ARRAY['M'::"bpchar", 'm'::"bpchar", 'F'::"bpchar", 'f'::"bpchar"])));
	 
	 /* Alteração da tabela professor incluindo o atributo sexo pertencente ao domínio domsexo - Questão 3.c*/
	 	ALTER TABLE professor ADD COLUMN sexo "domsexo";
		
	 /* Alteração do atributo matricula da tabela professor para SET DEFAULT (NULL) - Questão 3.d*/
		ALTER TABLE professor ALTER  matricula SET DEFAULT NULL;
		
	 /* Apagar a regra de chave estrangeira  da tabela curso (FKCurso), depois novamente inclui-la  - Questão 3.e*/
		/* REMOVENDO*/
			ALTER TABLE curso DROP CONSTRAINT FKCurso;
		/*INCLUINDO*/
			ALTER TABLE curso 
			ADD CONSTRAINT FKCurso 
			FOREIGN KEY(idInstituicao) 
			REFERENCES instituicao(idInstituicao)
	                ON DELETE SET NULL
	                ON UPDATE CASCADE;
/* FIM DA 3º QUESTÃO */

-- 4º Questão:
	/* Inserir dados (povoar o banco) nas tabelas. Mínimo de 5 tuplas por tabela */
--﻿Povoando Tabela Instiuição
INSERT INTO instituicao (cnpj, razaosocial, telefone, endereco)
values (14017677000147,'Unifacs','3333-2222','Rua B');
INSERT INTO instituicao (cnpj, razaosocial, telefone, endereco)
values (14017677000148,'UEFS','3333-2222','AV. Transnordestina');
INSERT INTO instituicao (cnpj, razaosocial, telefone, endereco)
values (14017677000149,'FAT','3333-2222','RUA C');
INSERT INTO instituicao (cnpj, razaosocial, telefone, endereco)
values (14017677000149,'FAN','3333-2222','RUA D');
INSERT INTO instituicao (cnpj, razaosocial, telefone, endereco)
values (14017677000150,'UFRB','3333-2222','RUA A');

--Povoando Tabela Disciplina
INSERT INTO disciplina ( nomedisciplina, cargahoraria)
values ('Banco I',60);
INSERT INTO disciplina ( nomedisciplina, cargahoraria)
values ('Banco II',45);
INSERT INTO disciplina ( nomedisciplina, cargahoraria)
values ('Redes',60);
INSERT INTO disciplina ( nomedisciplina, cargahoraria)
values ('RedesII',45);
INSERT INTO disciplina ( nomedisciplina, cargahoraria)
values ('LTP',60);

--Povoando TabelaProfessor
INSERT INTO professor(matricula,nomeprofessor,graduacao,sexo)
values(1,'Claudia Pinto','Doutorado','F');
INSERT INTO professor(matricula,nomeprofessor,graduacao,sexo)
values(2,'Ricardo Sena','Especialista','M');
INSERT INTO professor(matricula,nomeprofessor,graduacao,sexo)
values(3,'Marcio Carvalho','Especialista','M');
INSERT INTO professor(matricula,nomeprofessor,graduacao,sexo)
values(4,'Joseane Brandao','Especialista','F');
INSERT INTO professor(matricula,nomeprofessor,graduacao,sexo)
values(5,'Glediston','Mestre','M');

--Povoando Tabela Curso
INSERT INTO curso(nomecurso,idinstituicao)
values('Sistema Informação',2);
INSERT INTO curso(nomecurso,idinstituicao)
values('Analise Sistemas',1);
INSERT INTO curso(nomecurso,idinstituicao)
values('Sistema Informação',3);
INSERT INTO curso(nomecurso,idinstituicao)
values('Analise Sistemas',5);
INSERT INTO curso(nomecurso,idinstituicao)
values('Redes',2);

--Povoando Tabela Turma
INSERT INTO turma(nometurma,idcurso)
values ('robotica',3);
INSERT INTO turma(nometurma,idcurso)
values ('Manutenção',2);
INSERT INTO turma(nometurma,idcurso)
values ('Roteadores',1);
INSERT INTO turma(nometurma,idcurso)
values ('Calculo',5);
INSERT INTO turma(nometurma,idcurso)
values ('WEB',4);

--Povoando Tabela Sessao
INSERT INTO sessao(horatermino,secretariomesa,horainicio,coordenador,idturma,data)
values(11,'Josemar',10,'Genesio',4,'2017-05-11');
INSERT INTO sessao(horatermino,secretariomesa,horainicio,coordenador,idturma,data)
values(14,'Kecio',13,'Josemar',3,'2017-05-18');
INSERT INTO sessao(horatermino,secretariomesa,horainicio,coordenador,idturma,data)
values(11,'Genesio',10,'Rafaela',1,'2017-05-25');
INSERT INTO sessao(horatermino,secretariomesa,horainicio,coordenador,idturma,data)
values(11,'Josemar',10,'Kecio',2,'2017-05-31');
INSERT INTO sessao(horatermino,secretariomesa,horainicio,coordenador,idturma,data)
values(11,'Rafaela',10,'Genesio',5,'2017-06-07');

--Povoando Tabela Aluno
INSERT INTO aluno ("nomealuno", "idturma")
Values ('Josemar',2);
INSERT INTO aluno ("nomealuno", "idturma")
Values ('Genesio',1);
INSERT INTO aluno ("nomealuno", "idturma")
Values ('Kecio',2);
INSERT INTO aluno ("nomealuno", "idturma")
Values ('Rafaela',1);
INSERT INTO aluno ("nomealuno", "idturma")
Values ('Claudia',4);
INSERT INTO aluno ("nomealuno", "idturma")
Values ('Ricardo',5);

--Povoando Tabela Criterio
INSERT INTO criterio(nomecriterio,iddisciplina)
values('Presença',2);
INSERT INTO criterio(nomecriterio,iddisciplina)
values('Participação',5);
INSERT INTO criterio(nomecriterio,iddisciplina)
values('Pontualidade',1);
INSERT INTO criterio(nomecriterio,iddisciplina)
values('comprometimento',4);
INSERT INTO criterio(nomecriterio,iddisciplina)
values('nota',3);

--Povoando Tabela Avalia
INSERT INTO avalia(idcriterio,nota)
values(1,7.0);
INSERT INTO avalia(idcriterio,nota)
values(2,9.0);
INSERT INTO avalia(idcriterio,nota)
values(3,8.0);
INSERT INTO avalia(idcriterio,nota)
values(4,6.0);
INSERT INTO avalia(idcriterio,nota)
values(5,7.5);


--Povoando Tabela disciplinacontem
INSERT INTO disciplinacontem values(1);
INSERT INTO disciplinacontem values(3);
INSERT INTO disciplinacontem values(4);
INSERT INTO disciplinacontem values(2);
INSERT INTO disciplinacontem values(5);

--Povoando Tabela Ensina
INSERT INTO ensina values( 3,2);
INSERT INTO ensina values( 5,1);
INSERT INTO ensina values( 2,3);
INSERT INTO ensina values( 4,5);
INSERT INTO ensina values( 1,4);


--Povoando Tabela participa_obtido
INSERT INTO participa_obtido VALUES(6,5);
INSERT INTO participa_obtido VALUES(2,1);
INSERT INTO participa_obtido VALUES(4,2);
INSERT INTO participa_obtido VALUES(1,4);
INSERT INTO participa_obtido VALUES(3,3);


--5º Questão) INICIO

--  Atualizar todos os valores de um atributo de uma tabela --

UPDATE instituicao
	SET razaosocial = 'Unifacs'

-- Atualizando os valores de um atributo usando WHERE. --

UPDATE aluno 
	SET nomeAluno = 'Fulano' 
    	WHERE matriculaAluno = 6

-- Atualizando os valores de um atributo usando o WHERE com AND --

UPDATE disciplina
	SET nomeDisciplina = 'Banco de Dados' 
        WHERE idDisciplina = 1 AND cargaHoraria = 60

-- Atualizando os valores de um atributo usando o WHERE com OR --

UPDATE professor
	SET graduacao = 'Mestrado' 
    	WHERE graduacao = 'Mestre' OR sexo = 'M'

-- Atualize os valores de um atributo usando o SELECT junto com o UPDATE --

-- Excluindo todas as linhas de uma tabela --

DELETE FROM turma

-- Excluindo somente as linhas que satisfaçam a uma condição simples. --

DELETE FROM curso 
	WHERE idInstituicao = 2



--FIM 5º QUESTÃO




--6º Questão) INICIO

/* Consultando dados da tabela professor a coluna nomeprofessor que começa com 'C', com WHERE – LIKE  - Questão 6.e */
	SELECT * FROM professor WHERE nomeProfessor LIKE 'C%';

/* Consultando dados da tabela aluno a coluna nomealuno que não começa com 'R', com WHERE – NOT LIKE - Questão 6.f*/   
	SELECT * FROM ALUNO WHERE nomealuno NOT LIKE 'R%';

/* Consultando dados da tabela instituicao com WHERE e operador > 0 na coluna idinstituicao - Questão 6.h*/  
	SELECT * FROM instituicao WHERE idinstituicao > 0;
	
/* Consultando dados da tabela disciplina com BETWEEN ente 1 a 5 - Questão 6.i*/	
	SELECT * FROM disciplina WHERE iddisciplina BETWEEN 1 AND 5;

/*Consultando dados da tabela turma usando GROUP BY / HAVING no atributo idturma diferente de 1 - Questão 6.j */
	SELECT *FROM turma  GROUP BY idturma HAVING (idturma) <> 1;
	
/* Dados de 2 tabelas, usando sub-consulta(EXISTS)  -Questão 6.k*/ -------
	select * from aluno  where  exists(select * from turma where idturma=2);
	select * from aluno  where not exists(select * from turma where idturma=1);
	
/* Dados de 3  tabelas, usando sub-consulta -Questão 6.L*/
	select * from aluno where idturma =(select turma.idturma from turma,sessao where turma.idturma = sessao.idturma and sessao.idturma=1); 

/* Dados de 2 tabelas, usando GROU BY, ORDER BY(ou prduto cartesiano ou join)  -Questão 6.M*/
	select COUNT(razaosocial),razaosocial from instituicao  inner join curso on instituicao.idinstituicao = curso.idinstituicao group by  razaosocial order by razaosocial;

/* Dados de 2 tabelas, usando o JOIN -Questão 6.N*/
	select * from instituicao   join curso on instituicao.idinstituicao = curso.idinstituicao and idcurso = 5;

/* Dados de 2 tabelas, utilizando o LEFT JOIN -Questão 6.O*/
	select * from curso left join turma on curso.idcurso = turma.idcurso and curso.idcurso=4;   

/* Dados de 2 tabelas, utilizando o RIGHT JOIN -Questão 6.P*/
	select * from sessao right join turma on sessao.idturma = turma.idturma and sessao.horainicio = 10;

/* Dados de 3 tableas utilizando o IN -Questão 6.q*/
	select * from aluno where idturma  in(select turma.idturma from turma,sessao where turma.idturma = sessao.idturma and sessao.idturma=4);

/* Dados de 2 tabelas usando oSELECT após o FROM*/
	select a.nometurma from (select * from turma inner join curso on turma.idcurso= curso.idcurso)as a where a.nometurma like 'R%';

/*Dados de 3 tabelas, utilizando função de agregação*/
	select avg(avalia.nota) from avalia,criterio where avalia.idcriterio= criterio.idcriterio and criterio.idcriterio =
	(select idcriterio from criterio inner join disciplina on criterio.iddisciplina = disciplina.iddisciplina and disciplina.iddisciplina=4);
/* Unir duas consultas (Union)*/
	select a.nometurma from (select * from turma inner join curso on turma.idcurso= curso.idcurso)as a where a.nometurma like 'R%' 
	union 
	select nomealuno from aluno where idturma  in(select turma.idturma from turma,sessao where turma.idturma = sessao.idturma and sessao.idturma=4)
--FIM 6ºQuestão)

--<<<--- FIM (COLOCAR O SCRIPT DENTO DO CAMCO ACIMA !!!).
		
		
